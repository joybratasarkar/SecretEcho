{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/joy/Desktop/SecretEcho/client/src/services/api.ts"],"sourcesContent":["// const BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5000\";\n\nconst BASE_URL= \"https://secretecho-drzv.onrender.com\"\n\n\n// login\nexport const login = async (username: string, password: string) => {\n  const res = await fetch(`${BASE_URL}/api/auth/login`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ username, password }),\n  });\n  return res.json();\n};\n\n// register\nexport const register = async (username: string, email: string, password: string) => {\n  const res = await fetch(`${BASE_URL}/api/auth/signup`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ username, email, password }),\n  });\n  return res.json();\n};\n\n// sendMessage\nexport const sendMessage = async (token: string, message: string) => {\n  const res = await fetch(`${BASE_URL}/messages`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ message }),\n  });\n  return res.json();\n};\n\n// fetchMessages\nexport const fetchMessages = async (token: string, userId: string) => {\n  const res = await fetch(`${BASE_URL}/api/conversations/${userId}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  if (!res.ok) throw new Error(\"Failed to fetch messages\");\n  return res.json();\n};\n"],"names":[],"mappings":"AAAA,+EAA+E;;;;;;;AAE/E,MAAM,WAAU;AAIT,MAAM,QAAQ,OAAO,UAAkB;IAC5C,MAAM,MAAM,MAAM,MAAM,GAAG,SAAS,eAAe,CAAC,EAAE;QACpD,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;YAAE;YAAU;QAAS;IAC5C;IACA,OAAO,IAAI,IAAI;AACjB;AAGO,MAAM,WAAW,OAAO,UAAkB,OAAe;IAC9D,MAAM,MAAM,MAAM,MAAM,GAAG,SAAS,gBAAgB,CAAC,EAAE;QACrD,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;YAAE;YAAU;YAAO;QAAS;IACnD;IACA,OAAO,IAAI,IAAI;AACjB;AAGO,MAAM,cAAc,OAAO,OAAe;IAC/C,MAAM,MAAM,MAAM,MAAM,GAAG,SAAS,SAAS,CAAC,EAAE;QAC9C,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,eAAe,CAAC,OAAO,EAAE,OAAO;QAClC;QACA,MAAM,KAAK,SAAS,CAAC;YAAE;QAAQ;IACjC;IACA,OAAO,IAAI,IAAI;AACjB;AAGO,MAAM,gBAAgB,OAAO,OAAe;IACjD,MAAM,MAAM,MAAM,MAAM,GAAG,SAAS,mBAAmB,EAAE,QAAQ,EAAE;QACjE,SAAS;YAAE,eAAe,CAAC,OAAO,EAAE,OAAO;QAAC;IAC9C;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,IAAI,IAAI;AACjB","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///home/joy/Desktop/SecretEcho/client/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { login } from \"@/services/api\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\"; // ✅ import Link\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = async (e: any) => {\n    e.preventDefault();\n    const res = await login(username, password);\n    if (res.token) {\n      localStorage.setItem(\"token\", res.token);\n      localStorage.setItem(\"user_id\", res.user_id);\n      localStorage.setItem(\"username\", res.username);\n      router.push(\"/chat\");\n    } else {\n      alert(\"Invalid login\");\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <h1 className=\"text-2xl font-semibold\">Login</h1>\n      <form onSubmit={handleLogin} className=\"space-y-2\">\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          className=\"w-full p-2 border\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"w-full p-2 border\"\n        />\n        <button type=\"submit\" className=\"w-full bg-blue-600 text-white py-2 rounded\">\n          Login\n        </button>\n      </form>\n\n      {/* ✅ Add Signup Link */}\n      <p className=\"text-sm text-center\">\n        Don’t have an account?{\" \"}\n        <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\n          Sign up here\n        </Link>\n      </p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,8QAA8B,gBAAgB;AAJ9C;;;;;;AAMe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,cAAc,OAAO;QACzB,EAAE,cAAc;QAChB,MAAM,MAAM,MAAM,CAAA,GAAA,sHAAA,CAAA,QAAK,AAAD,EAAE,UAAU;QAClC,IAAI,IAAI,KAAK,EAAE;YACb,aAAa,OAAO,CAAC,SAAS,IAAI,KAAK;YACvC,aAAa,OAAO,CAAC,WAAW,IAAI,OAAO;YAC3C,aAAa,OAAO,CAAC,YAAY,IAAI,QAAQ;YAC7C,OAAO,IAAI,CAAC;QACd,OAAO;YACL,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8OAAC;gBAAK,UAAU;gBAAa,WAAU;;kCACrC,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC3C,WAAU;;;;;;kCAEZ,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC3C,WAAU;;;;;;kCAEZ,8OAAC;wBAAO,MAAK;wBAAS,WAAU;kCAA6C;;;;;;;;;;;;0BAM/E,8OAAC;gBAAE,WAAU;;oBAAsB;oBACV;kCACvB,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAU,WAAU;kCAAgC;;;;;;;;;;;;;;;;;;AAMvE","debugId":null}}]
}