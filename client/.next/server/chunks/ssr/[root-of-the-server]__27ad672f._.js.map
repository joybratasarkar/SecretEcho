{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///home/joy/Desktop/SecretEcho/client/src/components/ChatBox.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { io, Socket } from \"socket.io-client\";\nimport { fetchMessages } from \"@/services/api\"; // Your API to fetch past messages\n\nconst BASE_URL = \"http://localhost:5000\";  // Should be defined at the top\n\nfunction LoadingDots() {\n  return <span className=\"animate-pulse text-sm text-gray-500\">Typing...</span>;\n}\n\ninterface Message {\n  _id: string;\n  content: string;\n  sender: { _id: string; username: string } | null;\n  createdAt: string;\n  isAIResponse: boolean;\n}\n\nexport default function ChatBox() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState(\"\");\n  const [aiTyping, setAiTyping] = useState(false);\n  const socketRef = useRef<Socket | null>(null);\n\n  // Grab token from localStorage if available\n  const token = typeof window !== \"undefined\" ? localStorage.getItem(\"token\") : null;\n  const user_id:any = typeof window !== \"undefined\" ? localStorage.getItem(\"user_id\") : null;\n  useEffect(() => {\n    if (!token) return;\n    debugger;\n    // Connect socket with token auth\n    const socket = io(\"http://localhost:5000\", {\n\n      auth: { token },\n    });\n    socketRef.current = socket;\n\n    // Fetch existing messages from API\n  // fetchMessages(token, user_id).then((msgs) => setMessages(msgs));\n    // Listen for new messages from server\n    socket.on(\"newMessage\", (msg: Message) => {\n\n      setMessages((prev) => [...prev, msg]);\n    });\n    socket.on(\"connect_error\", (err: any) => {\n      console.error(\"❌ Socket connection error:\", err.message || err);\n    });\n\n    socket.on(\"aiTyping\", (typing: boolean) => {\n      setAiTyping(typing);\n    });\n\n\n    // Cleanup on unmount\n    return () => {\n      socket.disconnect();\n      socketRef.current = null;\n    };\n  }, [token,user_id]);\n\n  // Send message handler\n  const handleSend = () => {\n    if (!input.trim() || !socketRef.current) return;\n\n    socketRef.current.emit(\"sendMessage\", input.trim());\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"p-4 h-screen flex flex-col\">\n      {/* Messages display */}\n      <div className=\"flex-1 overflow-auto border mb-2 p-2 space-y-2\">\n        {messages.map((msg) => (\n          <div\n            key={msg._id}\n            className={`p-2 rounded-md max-w-sm ${msg.sender && msg.sender.username\n              ? \"bg-blue-100 text-right ml-auto\"\n              : \"bg-gray-100 text-left\"\n              }`}\n          >\n            {msg.content}\n          </div>\n        ))}\n        {aiTyping && (\n          <div className=\"p-2 bg-gray-200 rounded-md max-w-sm text-left\">\n            <LoadingDots />\n          </div>\n        )}\n      </div>\n\n      {/* Input box and send button */}\n      <div className=\"flex\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          className=\"flex-1 border p-2\"\n          placeholder=\"Type your message...\"\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n              handleSend();\n            }\n          }}\n        />\n        <button\n          onClick={handleSend}\n          className=\"ml-2 bg-blue-600 text-white px-4 py-2\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAKA,MAAM,WAAW,yBAA0B,+BAA+B;AAE1E,SAAS;IACP,qBAAO,8OAAC;QAAK,WAAU;kBAAsC;;;;;;AAC/D;AAUe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAiB;IAExC,4CAA4C;IAC5C,MAAM,QAAQ,6EAAgE;IAC9E,MAAM,UAAc,6EAAkE;IACtF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAY;;QAEZ,iCAAiC;QACjC,MAAM;IA2BR,GAAG;QAAC;QAAM;KAAQ;IAElB,uBAAuB;IACvB,MAAM,aAAa;QACjB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,OAAO,EAAE;QAEzC,UAAU,OAAO,CAAC,IAAI,CAAC,eAAe,MAAM,IAAI;QAChD,SAAS;IACX;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;oBACZ,SAAS,GAAG,CAAC,CAAC,oBACb,8OAAC;4BAEC,WAAW,CAAC,wBAAwB,EAAE,IAAI,MAAM,IAAI,IAAI,MAAM,CAAC,QAAQ,GACnE,mCACA,yBACA;sCAEH,IAAI,OAAO;2BANP,IAAI,GAAG;;;;;oBASf,0BACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;;;;;;;;;;;;;;;;0BAMP,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,WAAU;wBACV,aAAY;wBACZ,WAAW,CAAC;4BACV,IAAI,EAAE,GAAG,KAAK,SAAS;gCACrB,EAAE,cAAc;gCAChB;4BACF;wBACF;;;;;;kCAEF,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT","debugId":null}}]
}